[
    {
        "query": "please review this dataset and tell me which authors it includes",
        "Relevant data columns": [
            "authors"
        ],
        "Data column classification": [
            "keyword"
        ],
        "Low-level visualization task": [
            "retrieve value"
        ],
        "Low-level visualization task classification": [
            "inferred"
        ],
        "Visualization goal": [
            "targeted"
        ],
        "Ambiguity in the query": "",
        "Ambiguity resolution": "",
        "Data transformations": "df['authors'].dropna().unique()",
        "Data transformation operation": [
            "select",
            "filter",
            "unique"
        ],
        "New Column Name": "",
        "Derivation Specification": "",
        "Missing Data Column": ""
    },
    {
        "query": "filter all the videos published before yesterday",
        "Relevant data columns": [
            "publish_time"
        ],
        "Data column classification": [
            "keyword"
        ],
        "Low-level visualization task": [
            "filter"
        ],
        "Low-level visualization task classification": [
            "keyword"
        ],
        "Visualization goal": [
            "targeted"
        ],
        "Ambiguity in the query": "The term 'yesterday' is relative and needs to be converted to an absolute date based on the current date.",
        "Ambiguity resolution": "Convert 'yesterday' to the current date minus one day.",
        "Data transformations": "df[df['publish_time'] < pd.Timestamp('today').normalize() - pd.Timedelta(days=1)]",
        "Data transformation operation": [
            "filter"
        ],
        "New Column Name": "",
        "Derivation Specification": "",
        "Missing Data Column": ""
    },
    {
        "query": "which video has the most tags ?",
        "Relevant data columns": [
            "tags"
        ],
        "Data column classification": [
            "keyword"
        ],
        "Low-level visualization task": [
            "retrieve value",
            "find extremum"
        ],
        "Low-level visualization task classification": [
            "inferred",
            "inferred"
        ],
        "Visualization goal": [
            "targeted"
        ],
        "Ambiguity in the query": "",
        "Ambiguity resolution": "",
        "Data transformations": "df['tag_count'] = df['tags'].apply(lambda x: len(x.split('|'))); df.loc[df['tag_count'].idxmax()]",
        "Data transformation operation": [
            "create new column",
            "apply function",
            "retrieve value"
        ],
        "New Column Name": "tag_count",
        "Derivation Specification": "df['tag_count'] = df['tags'].apply(lambda x: len(x.split('|')))",
        "Missing Data Column": ""
    }
]