colnames(mistral_col)<- columns_of_interest
mistral_col["llm"] <- "Mixtral"
rdc_df <- rbind(rdc_df, mistral_col)
rdc_df <- as.data.frame(rdc_df)
rdc_df%>%
group_by(llm)%>%
summarize(count=n())%>%
ggplot(aes(x=llm, y=count))+
geom_col(fill ="#69b3a2")+
geom_text(aes(label = count), vjust = 1.6, color = "white")+
theme_minimal()+
theme(
panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.5, vjust=-5),
)+
labs( y="", title = "")+
guides(fill=guide_legend(nrow=1, reverse=TRUE))
#looks like theres high disagreement between llm and gt for vis context
rdc_df%>%
mutate(
agreements = ifelse(`positive matches count`>0 & (`llm only matches count`==0 & `gt only matches count`==0), "agreement",
ifelse(`positive matches count`==0 & (`llm only matches count`>0 & `gt only matches count`>0), "disagreement",
"partial-agreement"
)
)
)%>%
mutate(agreements = fct_relevel(agreements,c("agreement","partial-agreement","disagreement")))%>%
filter(!is.na(agreements))%>%
group_by(llm, agreements)%>%
summarize(
counts=n()
)%>%
ggplot(aes(fill=agreements, y=llm, x=counts)) +
geom_bar(position="fill", stat="identity")+
scale_x_continuous(labels = percent)+
scale_fill_manual(
labels = c("Total agreeement", "Partial Agreement", "Total disagreement"),
values = c("#E59D23", "#8B8500", "#006B60")
)+
theme_minimal()+
theme(
aspect.ratio = 1/4, legend.position = c(.5,-.45),
# panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.2),
text = element_text(size=15),
legend.direction = "horizontal"
)+
labs( x="% of responses", y="", title ="LLM and Human Visual Task Annotations")+
guides(fill=guide_legend(title = ""))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#import libaries
library(car)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(viridis)
library(ggstatsplot)
library("coin")
library("rstatix")
library(hrbrthemes)
library(nlme)
library(lme4)
library(scales)
library(report)
gpt_df <- read_csv("./results/gpt_vis_context_results.csv")
gemini_df <- read_csv("./results/gemini_vis_context_results.csv")
llama_df <- read_csv("./old_results/llama_vis_context_results.csv")
mistral_df <- read_csv("./old_results/mixtral_vis_context_results.csv")
names(mistral_df)[names(mistral_df) == 'mixtral_query'] <- 'query'
names(gemini_df)[names(gemini_df) == 'gemini_query'] <- 'query'
names(llama_df)[names(llama_df) == 'llama_query'] <- 'query'
names(gpt_df)[names(gpt_df) == 'gpt_query'] <- 'query'
#starting analysis for relevant data column matches
columns_of_interest <- c("query","positive matches count", "llm only matches count", "gt only matches count")
gpt_col <- gpt_df[c("query", "gpt_positive matches count", "gpt_llm only matches count", "gpt_gt only matches count")]
colnames(gpt_col)<- columns_of_interest
gpt_col["llm"] <- "GPT4"
rdc_df <- gpt_col
gemini_col <- gemini_df[c("query", "gemini_positive matches count", "gemini_llm only matches count", "gemini_gt only matches count")]
colnames(gemini_col)<- columns_of_interest
gemini_col["llm"] <- "Gemini-Pro"
rdc_df <- rbind(rdc_df, gemini_col)
llama_col <- llama_df[c("query", "llama_positive matches count", "llama_llm only matches count", "llama_gt only matches count")]
colnames(llama_col)<- columns_of_interest
llama_col["llm"] <- "Llama3"
rdc_df <- rbind(rdc_df, llama_col)
mistral_col <- mistral_df[c("query", "mixtral_positive matches count", "mixtral_llm only matches count", "mixtral_gt only matches count")]
colnames(mistral_col)<- columns_of_interest
mistral_col["llm"] <- "Mixtral"
rdc_df <- rbind(rdc_df, mistral_col)
# total prompts processed for each llm
rdc_df <- as.data.frame(rdc_df)
rdc_df%>%
group_by(llm)%>%
summarize(count=n())%>%
ggplot(aes(x=llm, y=count))+
geom_col(fill ="#69b3a2")+
geom_text(aes(label = count), vjust = 1.6, color = "white")+
theme_minimal()+
theme(
panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.5, vjust=-5),
)+
labs( y="", title = "")+
guides(fill=guide_legend(nrow=1, reverse=TRUE))
#looks like theres high disagreement between llm and gt for vis context
rdc_df%>%
mutate(
agreements = ifelse(`positive matches count`>0 & (`llm only matches count`==0 & `gt only matches count`==0), "agreement",
ifelse(`positive matches count`==0 & (`llm only matches count`>0 & `gt only matches count`>0), "disagreement",
"partial-agreement"
)
)
)%>%
mutate(agreements = fct_relevel(agreements,c("agreement","partial-agreement","disagreement")))%>%
filter(!is.na(agreements))%>%
group_by(llm, agreements)%>%
summarize(
counts=n()
)%>%
ggplot(aes(fill=agreements, y=llm, x=counts)) +
geom_bar(position="fill", stat="identity")+
scale_x_continuous(labels = percent)+
scale_fill_manual(
labels = c("Total agreeement", "Partial Agreement", "Total disagreement"),
values = c("#E59D23", "#8B8500", "#006B60")
)+
theme_minimal()+
theme(
aspect.ratio = 1/4, legend.position = c(.5,-.45),
# panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.2),
text = element_text(size=15),
legend.direction = "horizontal"
)+
labs( x="% of responses", y="", title ="LLM and Human Visual Task Annotations")+
guides(fill=guide_legend(title = ""))
#set working dir to current file dir
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#import libaries
library(car)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(viridis)
library(ggstatsplot)
library("coin")
library("rstatix")
library(hrbrthemes)
library(nlme)
library(lme4)
library(scales)
library(report)
gpt_df <- read_csv("./results/gpt_vis_context_results.csv")
gemini_df <- read_csv("./results/gemini_vis_context_results.csv")
llama_df <- read_csv("./results/llama_vis_context_results.csv")
mistral_df <- read_csv("./results/mixtral_vis_context_results.csv")
names(mistral_df)[names(mistral_df) == 'mixtral_query'] <- 'query'
names(gemini_df)[names(gemini_df) == 'gemini_query'] <- 'query'
names(llama_df)[names(llama_df) == 'llama_query'] <- 'query'
names(gpt_df)[names(gpt_df) == 'gpt_query'] <- 'query'
#starting analysis for relevant data column matches
columns_of_interest <- c("query","positive matches count", "llm only matches count", "gt only matches count")
gpt_col <- gpt_df[c("query", "gpt_positive matches count", "gpt_llm only matches count", "gpt_gt only matches count")]
colnames(gpt_col)<- columns_of_interest
gpt_col["llm"] <- "GPT4"
rdc_df <- gpt_col
gemini_col <- gemini_df[c("query", "gemini_positive matches count", "gemini_llm only matches count", "gemini_gt only matches count")]
colnames(gemini_col)<- columns_of_interest
gemini_col["llm"] <- "Gemini-Pro"
rdc_df <- rbind(rdc_df, gemini_col)
llama_col <- llama_df[c("query", "llama_positive matches count", "llama_llm only matches count", "llama_gt only matches count")]
colnames(llama_col)<- columns_of_interest
llama_col["llm"] <- "Llama3"
rdc_df <- rbind(rdc_df, llama_col)
mistral_col <- mistral_df[c("query", "mixtral_positive matches count", "mixtral_llm only matches count", "mixtral_gt only matches count")]
colnames(mistral_col)<- columns_of_interest
mistral_col["llm"] <- "Mixtral"
rdc_df <- rbind(rdc_df, mistral_col)
# total prompts processed for each llm
rdc_df <- as.data.frame(rdc_df)
rdc_df%>%
group_by(llm)%>%
summarize(count=n())%>%
ggplot(aes(x=llm, y=count))+
geom_col(fill ="#69b3a2")+
geom_text(aes(label = count), vjust = 1.6, color = "white")+
theme_minimal()+
theme(
panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.5, vjust=-5),
)+
labs( y="", title = "")+
guides(fill=guide_legend(nrow=1, reverse=TRUE))
#looks like theres high disagreement between llm and gt for vis context
rdc_df%>%
mutate(
agreements = ifelse(`positive matches count`>0 & (`llm only matches count`==0 & `gt only matches count`==0), "agreement",
ifelse(`positive matches count`==0 & (`llm only matches count`>0 & `gt only matches count`>0), "disagreement",
"partial-agreement"
)
)
)%>%
mutate(agreements = fct_relevel(agreements,c("agreement","partial-agreement","disagreement")))%>%
filter(!is.na(agreements))%>%
group_by(llm, agreements)%>%
summarize(
counts=n()
)%>%
ggplot(aes(fill=agreements, y=llm, x=counts)) +
geom_bar(position="fill", stat="identity")+
scale_x_continuous(labels = percent)+
scale_fill_manual(
labels = c("Total agreeement", "Partial Agreement", "Total disagreement"),
values = c("#E59D23", "#8B8500", "#006B60")
)+
theme_minimal()+
theme(
aspect.ratio = 1/4, legend.position = c(.5,-.45),
# panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.2),
text = element_text(size=15),
legend.direction = "horizontal"
)+
labs( x="% of responses", y="", title ="LLM and Human Visual Task Annotations")+
guides(fill=guide_legend(title = ""))
rdc_df%>%
mutate(
agreements = ifelse(`positive matches count`>0 & (`llm only matches count`==0 & `gt only matches count`==0), "agreement",
ifelse(`positive matches count`==0 & (`llm only matches count`>0 & `gt only matches count`>0), "disagreement",
"partial-agreement"
)
)
)%>%
mutate(agreements = fct_relevel(agreements,c("agreement","partial-agreement","disagreement")))%>%
filter(!is.na(agreements))%>%
group_by(llm, agreements)%>%
summarize(
counts=n()
)
rdc_df%>%
mutate(
agreements = ifelse(`positive matches count`>0 & (`llm only matches count`==0 & `gt only matches count`==0), "agreement",
ifelse(`positive matches count`==0 & (`llm only matches count`>0 & `gt only matches count`>0), "disagreement",
"partial-agreement"
)
)
)%>%
mutate(agreements = fct_relevel(agreements,c("agreement","partial-agreement","disagreement")))%>%
filter(!is.na(agreements))%>%
group_by(llm, agreements)%>%
summarize(
counts=n(),
percentage = n()/ nrow(rdc_df) * 100
)
#set working dir to current file dir
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(car)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(viridis)
library(ggstatsplot)
library("coin")
library("rstatix")
#load files
encodings_used <- read_csv("./GeneratedFiles/encodings_used.csv")
encodings_used%>%
filter(type=="encoding")%>%
group_by(group)%>%
mutate(
percent=(value/sum(value))*100,
# code=fct_reorder(code, percent),
code = factor(code, levels=c("texture", "tilt", "shape", "angle", "size", "color", "position")),
group=factor(group, levels=c("sketch", "examples"))
)%>%
ggplot(aes(x=percent, y=group, fill=code))+
geom_col(width=0.8)+
geom_text(
aes(label = ifelse(percent>5, paste0(round(percent), "%"), "")),
position = position_stack(vjust = 0.5),
size=4,
color="#ffffff",
check_overlap = TRUE
) +
scale_fill_manual(
values=encoding_colors,
name="")+
scale_y_discrete(labels=c("examples" = "Examples", "sketch" = "Sketches"))+
theme_minimal()+
theme(
aspect.ratio = 1/8, legend.position = c(.5,.0), text = element_text(size=15),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.title.x=element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),
axis.text.y = element_text(margin = margin(t = 0, r = -20, b = 0, l = 0)),
plot.title = element_text(hjust=0.5, vjust=-1.5),
plot.margin=unit(c(1,1,-0.8,1), "cm")
)+
labs( y="", title = "")+
guides(fill=guide_legend(nrow=1))
encodings_used <- read_csv("./GeneratedFiles/encodings_used.csv")
styles_used <- read_csv("./GeneratedFiles/styles_used.csv")
idea_trans <- read_csv("./GeneratedFiles/new_idea_transfer_counts.csv")
scores <- read_csv("./GeneratedFiles/new_scores.csv")
idea_trans <- idea_trans%>%
inner_join(scores[, c("id", "topicsimilarity", "schematicsimilarity", "diversity", "totalbookmarked")], by=c("id"="id"))
# Examples related charts
encoding_colors = c("#EAB676", "#BCAB59","#A6AA68","#69976C","#5c916e","#3C7F72","#2B636C","#2F4858", "#999999")
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
encodings_used%>%
filter(type=="encoding")%>%
group_by(group)%>%
mutate(
percent=(value/sum(value))*100,
# code=fct_reorder(code, percent),
code = factor(code, levels=c("texture", "tilt", "shape", "angle", "size", "color", "position")),
group=factor(group, levels=c("sketch", "examples"))
)%>%
ggplot(aes(x=percent, y=group, fill=code))+
geom_col(width=0.8)+
geom_text(
aes(label = ifelse(percent>5, paste0(round(percent), "%"), "")),
position = position_stack(vjust = 0.5),
size=4,
color="#ffffff",
check_overlap = TRUE
) +
scale_fill_manual(
values=encoding_colors,
name="")+
scale_y_discrete(labels=c("examples" = "Examples", "sketch" = "Sketches"))+
theme_minimal()+
theme(
aspect.ratio = 1/8, legend.position = c(.5,.0), text = element_text(size=15),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.title.x=element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),
axis.text.y = element_text(margin = margin(t = 0, r = -20, b = 0, l = 0)),
plot.title = element_text(hjust=0.5, vjust=-1.5),
plot.margin=unit(c(1,1,-0.8,1), "cm")
)+
labs( y="", title = "")+
guides(fill=guide_legend(nrow=1))
encodings_used%>%
filter(type=="encoding")%>%
group_by(group)%>%
mutate(
percent=(value/sum(value))*100,
# code=fct_reorder(code, percent),
code = factor(code, levels=c("texture", "tilt", "shape", "angle", "size", "color", "position")),
group=factor(group, levels=c("sketch", "examples"))
)%>%
ggplot(aes(x=percent, y=group, fill=code))+
geom_col(width=0.8)+
geom_text(
aes(label = ifelse(percent>5, paste0(round(percent), "%"), "")),
position = position_stack(vjust = 0.5),
size=4,
color="#ffffff",
check_overlap = TRUE
) +
scale_fill_manual(
values=encoding_colors,
name="")+
scale_y_discrete(labels=c("examples" = "Examples", "sketch" = "Sketches"))+
theme_minimal()+
theme(
aspect.ratio = 1/8, legend.position = c(.5,.0), text = element_text(size=15),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(),axis.title.x=element_blank(),
axis.text.x=element_blank(),axis.ticks.x=element_blank(),
axis.text.y = element_text(margin = margin(t = 0, r = -20, b = 0, l = 0)),
plot.title = element_text(hjust=0.5, vjust=-1.5),
plot.margin=unit(c(1,1,-0.8,1), "cm")
)+
labs( y="", title = "")+
guides(fill=guide_legend(nrow=1, reverse=TRUE))
#set working dir to current file dir
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#import libaries
library(car)
library(tidyr)
library(ggplot2)
library(gridExtra)
library(tidyverse)
library(viridis)
library(ggstatsplot)
library("coin")
library("rstatix")
library(hrbrthemes)
library(scales)
library(ggpattern)
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
gpt_df <- read_csv("./results/gpt_vis_context_results.csv")
gemini_df <- read_csv("./results/gemini_vis_context_results.csv")
llama_df <- read_csv("./results/llama_vis_context_results.csv")
mistral_df <- read_csv("./results/mixtral_vis_context_results.csv")
names(mistral_df)[names(mistral_df) == 'mixtral_query'] <- 'query'
names(gemini_df)[names(gemini_df) == 'gemini_query'] <- 'query'
names(llama_df)[names(llama_df) == 'llama_query'] <- 'query'
names(gpt_df)[names(gpt_df) == 'gpt_query'] <- 'query'
#starting analysis for relevant data column matches
columns_of_interest <- c("query","positive matches count", "llm only matches count", "gt only matches count")
gpt_col <- gpt_df[c("query", "gpt_positive matches count", "gpt_llm only matches count", "gpt_gt only matches count")]
colnames(gpt_col)<- columns_of_interest
gpt_col["llm"] <- "GPT4"
rdc_df <- gpt_col
gemini_col <- gemini_df[c("query", "gemini_positive matches count", "gemini_llm only matches count", "gemini_gt only matches count")]
colnames(gemini_col)<- columns_of_interest
gemini_col["llm"] <- "Gemini-Pro"
rdc_df <- rbind(rdc_df, gemini_col)
llama_col <- llama_df[c("query", "llama_positive matches count", "llama_llm only matches count", "llama_gt only matches count")]
colnames(llama_col)<- columns_of_interest
llama_col["llm"] <- "Llama3"
rdc_df <- rbind(rdc_df, llama_col)
mistral_col <- mistral_df[c("query", "mixtral_positive matches count", "mixtral_llm only matches count", "mixtral_gt only matches count")]
colnames(mistral_col)<- columns_of_interest
mistral_col["llm"] <- "Mixtral"
rdc_df <- rbind(rdc_df, mistral_col)
# total prompts processed for each llm
rdc_df <- as.data.frame(rdc_df)
rdc_df%>%
group_by(llm)%>%
summarize(count=n())%>%
ggplot(aes(x=llm, y=count))+
geom_col(fill ="#69b3a2")+
geom_text(aes(label = count), vjust = 1.6, color = "white")+
theme_minimal()+
theme(
panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.5, vjust=-5),
)+
labs( y="", title = "")+
guides(fill=guide_legend(nrow=1, reverse=TRUE))
#looks like theres high disagreement between llm and gt for vis context
vis_df<-rdc_df%>%
mutate(
agreements = ifelse(`positive matches count`>0 & (`llm only matches count`==0 & `gt only matches count`==0), "Total agreement",
ifelse(`positive matches count`==0 & (`llm only matches count`>0 & `gt only matches count`>0), "Total disagreement",
"Partial agreement"
)
)
)%>%
mutate(agreements = fct_relevel(agreements,c("Total agreement","Partial agreement","Total disagreement")))%>%
filter(!is.na(agreements))%>%
group_by(llm, agreements)%>%
summarize(
counts=n(),
percentage = n()/ nrow(rdc_df) * 100
)
vis_df%>%
ggplot(aes(fill=agreements, y=llm, x=counts)) +
geom_bar(position="fill", stat="identity")+
scale_x_continuous(labels = percent)+
scale_fill_manual(
labels = c("Total agreeement", "Partial agreement", "Total disagreement"),
values = c("#E59D23", "#8B8500", "#006B60")
)+
theme_minimal()+
theme(
aspect.ratio = 1/4, legend.position = c(.5,-.45),
# panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.3),
text = element_text(size=20),
legend.direction = "horizontal"
)+
labs( x="% of responses", y="", title ="LLM and Human Visual Task Annotations")+
guides(fill=guide_legend(title = ""))
#pattern version
vis_df%>%
ggplot(aes(y=llm, x=counts)) +
geom_bar_pattern(
aes(
pattern_fill = agreements,
pattern = agreements,
fill= agreements
),
position = "fill",
stat="identity",
colour  = 'black',
# fill = "white",
pattern_density = 0.5,
pattern_key_scale_factor = 0.2
# pattern_colour  = 'darkgrey'
)+
scale_x_continuous(labels = percent)+
scale_pattern_fill_manual(
# labels = c("Total agreement", "Partial Agreement", "Total disagreement"),
values = c("Total agreement"="#E59D23", "Partial agreement"="#8B8500", "Total disagreement"="#006B60")
)+
scale_fill_manual(
labels = c("Total agreeement", "Partial agreement", "Total disagreement"),
values = c("#E59D23", "#8B8500", "#006B60"),
# values= cbPalette,
guide="none"
)+
theme_minimal()+
theme(
aspect.ratio = 1/4, legend.position = c(.5,-.45),
# panel.background = element_blank(),axis.title.x=element_blank(),
plot.title = element_text(hjust=0.3),
text = element_text(size=20),
legend.direction = "horizontal",
legend.title=element_blank()
)+
labs( x="% of responses", y="", title ="LLM and Human Visual Task Annotations")+
guides(fill=guide_legend(nrow=1, reverse=TRUE))
