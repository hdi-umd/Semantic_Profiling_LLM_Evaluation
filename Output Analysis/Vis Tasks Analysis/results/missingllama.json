[{"query": "how does mpg compare to displacement, for each region", "dataset": "cars.csv", "Relevant data columns": ["mpg", "cubicinches", "country"], "Data column classification": ["keyword", "inferred", "inferred"], "Low-level visualization task": ["compare"], "Low-level visualization task classification": ["keyword"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "res = df[[\"mpg\", \"cubicinches\", \"country\"]]", "Data transformation operation": "select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "please review this dataset and tell me which authors it includes", "dataset": "google_books_dataset.csv", "Relevant data columns": ["authors"], "Data column classification": ["keyword"], "Low-level visualization task": ["retrieve value"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df['authors'].unique()", "Data transformation operation": "summarize", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "can you tell me the total number of categories", "dataset": "googleplaystore.csv", "Relevant data columns": ["category"], "Data column classification": ["keyword"], "Low-level visualization task": ["summarize"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df['Category'].value_counts()", "Data transformation operation": "summarize", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "are there any visible trends in violent crime rates over the time period", "dataset": "GunViolence.csv", "Relevant data columns": ["date", "n_killed"], "Data column classification": ["inferred", "inferred"], "Low-level visualization task": ["trend"], "Low-level visualization task classification": ["keyword"], "Visualization goal": ["exploratory"], "Ambiguity in the query": "violent crime rate is undefined. No insight provided on how to measure it", "Ambiguity resolution": "assume violent crime rates refers to cases where people were killed.", "Data transformations": "df.groupby(\"date\")[\"n_killed\"].sum()", "Data transformation operation": "groupby, summarize", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "is more gun violence committed with stolen guns or non stolen guns", "dataset": "GunViolence.csv", "Relevant data columns": ["gun_stolen"], "Data column classification": ["keyword"], "Low-level visualization task": ["compare"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["exploaratory"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[\"gun_stolen\"].value_counts()", "Data transformation operation": "summarize", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "do you know which videos have more than 100 tags", "dataset": "JPvideos.csv", "Relevant data columns": ["title", "tags"], "Data column classification": ["inferred", "data value mention"], "Low-level visualization task": ["filter"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df['tag_count'] = df['tags'].apply(lambda x: len(x.split('|'))); videos_over_100_tags = df[df['tag_count'] > 100]", "Data transformation operation": "mutate, select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "in the videos by ' eminemvevo ', what are the average number of comments made", "dataset": "JPvideos.csv", "Relevant data columns": ["comment_count", "channel_title"], "Data column classification": ["synonym", "data value mention"], "Low-level visualization task": ["summarize"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df.groupby(\"channel_title\")['comment_count'].mean()", "Data transformation operation": "groupby, summarize", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "filter all the videos published before yesterday", "dataset": "JPvideos.csv", "Relevant data columns": ["publish_time"], "Data column classification": ["inferred"], "Low-level visualization task": ["filter"], "Low-level visualization task classification": ["keyword"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "", "Data transformation operation": "filter", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "which videos are missing thumbnail links", "dataset": "JPvideos.csv", "Relevant data columns": ["thumbnail_link"], "Data column classification": ["keyword"], "Low-level visualization task": ["filter"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["exploratory"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[df['thumbnail_link'].isna()]", "Data transformation operation": "filter", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "' plush- bad unboxing fan mail ' belongs to which specific channel", "dataset": "JPvideos.csv", "Relevant data columns": ["channel_title"], "Data column classification": ["synonym"], "Low-level visualization task": ["retrieve value", " filter"], "Low-level visualization task classification": ["inferred", " inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[df['title'].str == 'Plush - Bad Unboxing Fan Mail']['channel_title'].iloc[0]", "Data transformation operation": "filter", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "which video has the most tags", "dataset": "JPvideos.csv", "Relevant data columns": ["title", "tags"], "Data column classification": ["inferred", "keyword"], "Low-level visualization task": ["find extremum"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["exploratory"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "", "Data transformation operation": "mutate, select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "give me a list of videos, ordered by the number of likes, that are on the channel ' eminemvevo '", "dataset": "JPvideos.csv", "Relevant data columns": ["title", "likes", "channel_title"], "Data column classification": ["inferred", "keyword", "keyword"], "Low-level visualization task": ["Sort"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[df['channel_title'].str == 'eminemvevo'].sort_values('likes', ascending=False); df[[{\"title\",\"channel_title\", \"likes\"]]", "Data transformation operation": "filter, sort", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "show me the video with the highest number of tags", "dataset": "JPvideos.csv", "Relevant data columns": ["title", "tags"], "Data column classification": ["inferred", "keyword"], "Low-level visualization task": ["find extremum"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["exploratory"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df['tag_count'] = df['tags'].apply(lambda x: len(x.split('|'))); df[\"tag_count\"]", "Data transformation operation": "mutate, select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "indicate the number of likes that ' plush- bad unboxing fan mail ' receives", "dataset": "JPvideos.csv", "Relevant data columns": ["likes", "title"], "Data column classification": ["keyword", "data value mention"], "Low-level visualization task": ["retrieve value", " filter"], "Low-level visualization task classification": ["synonym", " inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[['title','likes']]", "Data transformation operation": "select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "what is the number if likes from the ' plush- bad unboxing fan mail ' video", "dataset": "JPvideos.csv", "Relevant data columns": ["likes", "title"], "Data column classification": ["keyword", "data value mention"], "Low-level visualization task": ["retrieve value", " filter"], "Low-level visualization task classification": ["synonym", " inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[['title','likes']]", "Data transformation operation": "select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "discover the most liked removed video", "dataset": "JPvideos.csv", "Relevant data columns": ["likes", "video_error_or_removed", "title"], "Data column classification": ["keyword", "inferred", "inferred"], "Low-level visualization task": ["sort", " retrieve value"], "Low-level visualization task classification": ["inferred", " inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df.sort_values('likes', ascending=False); df[[\"likes\", \"video_error_or_removed\"]]", "Data transformation operation": "sort, select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "are there are special characters included in the title", "dataset": "JPvideos.csv", "Relevant data columns": ["title"], "Data column classification": ["keyword"], "Low-level visualization task": ["filter"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["exploratory"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df['special_chars_in_title'] = df['title'].apply(lambda x: re.search(r'[^a-zA-Z0-9 ]', x).group(0)); special_chars_videos = df[df['special_chars_in_title']].value_counts()", "Data transformation operation": "mutate, select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "do videos with longer titles get more attention", "dataset": "JPvideos.csv", "Relevant data columns": ["title", "views"], "Data column classification": ["keyword", "inferred"], "Low-level visualization task": ["correlate"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["exploratory"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df['title_length'] = df['title'].str.len(); title_length_attention_corr = df[['title_length','views']]", "Data transformation operation": "mutate, select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "tell me about the ' plush- bad unboxing fan mail ' video", "dataset": "JPvideos.csv", "Relevant data columns": ["channel_title"], "Data column classification": ["synonym"], "Low-level visualization task": ["retrieve value", " filter"], "Low-level visualization task classification": ["inferred", " inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[df['title'].astype(str) == 'Plush - Bad Unboxing Fan Mail']['channel_title']", "Data transformation operation": "filter", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "can you show me how the likes are distributed", "dataset": "JPvideos.csv", "Relevant data columns": ["likes"], "Data column classification": ["keyword"], "Low-level visualization task": ["characterize distribution"], "Low-level visualization task classification": ["keyword"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df['likes']", "Data transformation operation": "select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "can you tell me what peacland english medium school's change pre is in 2016", "dataset": "schools.csv", "Relevant data columns": ["change_previous_year", "name", "year_of_result"], "Data column classification": ["keyword", "data value mention", "data value mention"], "Low-level visualization task": ["retrieve value"], "Low-level visualization task classification": ["inferred", " inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[(df['NAME'] == 'PEACLAND ENGLISH MEDIUM SCHOOL') & (df['YEAR_OF_RESULT'] == 2016)]['CHANGE_PREVIOUS_YEAR']", "Data transformation operation": "filter, select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}]