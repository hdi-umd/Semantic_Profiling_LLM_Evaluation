[{"query": "how does mpg compare to displacement, for each region", "dataset": "cars.csv", "Relevant data columns": ["mpg", "cubicinches", "country"], "Data column classification": ["keyword", "inferred", "inferred"], "Low-level visualization task": ["compare"], "Low-level visualization task classification": ["keyword"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "res = df[[\"mpg\", \"cubicinches\", \"country\"]]", "Data transformation operation": "select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "please review this dataset and tell me which authors it includes", "dataset": "google_books_dataset.csv", "Relevant data columns": ["authors"], "Data column classification": ["keyword"], "Low-level visualization task": ["retrieve value"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df['authors'].unique()", "Data transformation operation": "summarize", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "filter all the videos published before yesterday", "dataset": "JPvideos.csv", "Relevant data columns": ["publish_time"], "Data column classification": ["inferred"], "Low-level visualization task": ["filter"], "Low-level visualization task classification": ["keyword"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "", "Data transformation operation": "filter", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "' plush- bad unboxing fan mail ' belongs to which specific channel", "dataset": "JPvideos.csv", "Relevant data columns": ["channel_title"], "Data column classification": ["synonym"], "Low-level visualization task": ["retrieve value", " filter"], "Low-level visualization task classification": ["inferred", " inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[df['title'].str == 'Plush - Bad Unboxing Fan Mail']['channel_title'].iloc[0]", "Data transformation operation": "filter", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "which video has the most tags", "dataset": "JPvideos.csv", "Relevant data columns": ["title", "tags"], "Data column classification": ["inferred", "keyword"], "Low-level visualization task": ["find extremum"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["exploratory"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "", "Data transformation operation": "mutate, select", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}, {"query": "give me a list of videos, ordered by the number of likes, that are on the channel ' eminemvevo '", "dataset": "JPvideos.csv", "Relevant data columns": ["title", "likes", "channel_title"], "Data column classification": ["inferred", "keyword", "keyword"], "Low-level visualization task": ["Sort"], "Low-level visualization task classification": ["inferred"], "Visualization goal": ["targeted"], "Ambiguity in the query": "", "Ambiguity resolution": "", "Data transformations": "df[df['channel_title'].str == 'eminemvevo'].sort_values('likes', ascending=False); df[[{\"title\",\"channel_title\", \"likes\"]]", "Data transformation operation": "filter, sort", "New Column Name": "", "Derivation Specification": "", "Missing Data Column": ""}]